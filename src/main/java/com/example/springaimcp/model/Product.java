package com.example.springaimcp.model;

import java.math.BigDecimal;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

// Using Lombok can reduce boilerplate, but getters/setters/constructors are shown for clarity if not using Lombok.
// import lombok.Data;
// import lombok.NoArgsConstructor;
// import lombok.AllArgsConstructor;

// @Data
// @NoArgsConstructor
// @AllArgsConstructor
@Entity // Marks this class as a JPA entity
@Table(name = "products") // Specifies the database table to which this entity is mapped
public class Product {

    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures the ID to be auto-generated by the database
    private Long id;

    @Column(nullable = false) // Specifies that this column cannot be null
    private String name;

    private String category;

    @Column(precision = 10, scale = 2) // Defines precision and scale for decimal numbers
    private BigDecimal price;

    @Column(columnDefinition = "TEXT") // Defines the column type as TEXT for longer strings
    private String description;

    // Default constructor required by JPA
    public Product() {
    }

    // Constructor for creating new products without an ID (ID is auto-generated)
    public Product(String name, String category, BigDecimal price, String description) {
        this.name = name;
        this.category = category;
        this.price = price;
        this.description = description;
    }

    // Getters and Setters
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public BigDecimal getPrice() {
        return price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public String toString() {
        return "Product{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", category='" + category + '\'' +
                ", price=" + price +
                ", description='" + description + '\'' +
                '}';
    }
}
