# src/main/resources/application.properties

# Server Configuration
server.port=8080

# --- Database Datasource Configuration (PostgreSQL) ---
# This URL is for running the Spring Boot app OUTSIDE Docker,
# but connecting to PostgreSQL running IN Docker (exposed on localhost:5432)
spring.datasource.url=jdbc:postgresql://localhost:5432/mcp_data

# If running the Spring Boot app INSIDE Docker via the docker-compose.yml,
# the SPRING_DATASOURCE_URL environment variable (jdbc:postgresql://postgres-db:5432/mcp_data)
# in docker-compose.yml will override the value above.
spring.datasource.username=admin
# Make sure this matches your docker-compose.yml
spring.datasource.password=password123
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA (Java Persistence API) Configuration
# Creates/updates the schema. Use 'validate' or 'none' in production.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# Shows SQL queries in the console
# Formats SQL logs
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Spring AI Configuration (Example for OpenAI)
# Replace with your actual API key or set as an environment variable.
# The docker-compose.yml sets SPRING_AI_OPENAI_API_KEY as an environment variable.
spring.ai.openai.api-key=${SPRING_AI_OPENAI_API_KEY:YOUR_OPENAI_API_KEY_FALLBACK}
# spring.ai.openai.model=gpt-3.5-turbo # Optionally specify a model

# Springdoc OpenAPI / Swagger UI custom path (optional)
springdoc.swagger-ui.path=/swagger-custom.html
